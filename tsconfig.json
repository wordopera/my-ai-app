{
  "compilerOptions": {
    "target": "es6", // Compile to ES6 (ECMAScript 2015) syntax
    "module": "esnext", // Use the latest ECMAScript module syntax
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ], // Include necessary libraries
    "strict": true, // Enable all strict type-checking options
    "noImplicitAny": true, // Raise errors on expressions and declarations with an implied 'any' type
    "strictNullChecks": true, // Ensure that 'null' and 'undefined' are not assignable to other types
    "strictFunctionTypes": true, // Ensure that function types are checked more strictly
    "strictBindCallApply": true, // Ensure that methods like 'bind', 'call', and 'apply' are more strictly checked
    "strictPropertyInitialization": true, // Ensure that class properties are correctly initialized
    "noImplicitThis": true, // Raise errors on 'this' expressions with an implied 'any' type
    "alwaysStrict": true, // Ensure that TypeScript code is parsed in strict mode
    "skipLibCheck": true, // Skip type checking of declaration files (can be set to false for full strictness)
    "noEmit": true, // Do not output files; used in projects like Next.js
    "esModuleInterop": true, // Enable compatibility for importing CommonJS modules
    "moduleResolution": "bundler", // Use bundler-style module resolution
    "resolveJsonModule": true, // Allow importing JSON modules
    "isolatedModules": true, // Ensure each file can be safely transpiled independently
    "jsx": "preserve", // Preserve JSX syntax (for use with React)
    "incremental": true, // Enable incremental compilation
    "plugins": [
      {
        "name": "next" // Use Next.js TypeScript plugin
      }
    ],
    "paths": {
      "@/*": [
        "./*"
      ] // Path mapping for module resolution
    },
    "allowJs": true
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ], // Files to include in the compilation
  "exclude": [
    "node_modules"
  ] // Exclude node_modules from the compilation
}
